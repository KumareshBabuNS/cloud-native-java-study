/**
 * This class is generated by jOOQ
 */
package com.example.jooq.generated;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Jooqreservation extends TableImpl<Record> {

    private static final long serialVersionUID = 1576863841;

    /**
     * The reference instance of <code>PUBLIC.JOOQRESERVATION</code>
     */
    public static final Jooqreservation JOOQRESERVATION = new Jooqreservation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>PUBLIC.JOOQRESERVATION.ID</code>.
     */
    public final TableField<Record, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("(NEXT VALUE FOR PUBLIC.SYSTEM_SEQUENCE_CE5B30EF_6B3A_4203_AED6_D5DBABB519F7)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>PUBLIC.JOOQRESERVATION.NAME</code>.
     */
    public final TableField<Record, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>PUBLIC.JOOQRESERVATION</code> table reference
     */
    public Jooqreservation() {
        this("JOOQRESERVATION", null);
    }

    /**
     * Create an aliased <code>PUBLIC.JOOQRESERVATION</code> table reference
     */
    public Jooqreservation(String alias) {
        this(alias, JOOQRESERVATION);
    }

    private Jooqreservation(String alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private Jooqreservation(String alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<Record, Integer> getIdentity() {
        return Keys.IDENTITY_JOOQRESERVATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Record> getPrimaryKey() {
        return Keys.CONSTRAINT_D;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Record>> getKeys() {
        return Arrays.<UniqueKey<Record>>asList(Keys.CONSTRAINT_D);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Jooqreservation as(String alias) {
        return new Jooqreservation(alias, this);
    }

    /**
     * Rename this table
     */
    public Jooqreservation rename(String name) {
        return new Jooqreservation(name, null);
    }
}
